basePath: /
definitions:
  app.loginReq:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  app.loginResp:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      login:
        type: string
      role:
        type: integer
      token_type:
        type: string
    type: object
  app.registerReq:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  app.registerResp:
    properties:
      ok:
        type: boolean
    type: object
  ds.AsyncBody:
    properties:
      id:
        type: integer
      status:
        type: boolean
    type: object
  ds.ChangeTransferStatusRequestBody:
    properties:
      reqID:
        type: integer
      status:
        type: string
    type: object
  ds.DelTransferToOrbitBody:
    properties:
      orbit:
        type: string
      req:
        type: string
    type: object
  ds.Orbit:
    properties:
      apogee:
        type: string
      description:
        type: string
      id:
        type: integer
      imageURL:
        type: string
      inclination:
        type: string
      isAvailable:
        type: boolean
      name:
        type: string
      perigee:
        type: string
    type: object
  ds.OrbitOrder:
    properties:
      orbit_name:
        type: string
      transfer_order:
        type: integer
    type: object
  ds.UpdateTransferOrdersBody:
    properties:
      req_id:
        type: integer
      transfer_order:
        additionalProperties:
          type: integer
        type: object
    type: object
host: localhost:8000
info:
  contact: {}
  description: ORBIT TRANSFER
  title: orbits docs
  version: 0.0-0
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Проверяет данные для входа и в случае успеха возвращает токен для
        входа
      parameters:
      - description: Данные для входа
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/app.loginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.loginResp'
      summary: Вход в систему
      tags:
      - Аутентификация
  /logout:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Выйти из системы
      tags:
      - Аутентификация
  /orbits:
    get:
      consumes:
      - application/json
      description: Возвращает все доступные орбиты по указанным фильтрам
      parameters:
      - description: Название орбиты или его часть
        in: query
        name: orbit_name
        type: string
      - description: Включение орбит в заявку (true/false)
        in: query
        name: orbit_incl
        type: string
      - description: Круговая орбита (true/false)
        in: query
        name: is_circle
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Успешно получены орбиты
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Некорректные параметры запроса
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Получение всех орбит со статусом "Доступна" по фильтрам
      tags:
      - Орбиты
  /orbits/{orbit_name}:
    get:
      description: Возвращает подробную информацию об орбите по ее названию
      parameters:
      - description: Название орбиты
        in: path
        name: orbit_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Получение детализированной информации об орбите
      tags:
      - Орбиты
  /orbits/{orbit_name}/add:
    post:
      consumes:
      - application/json
      description: Создает заявку на трансфер в статусе (или добавляет в открытую)
        и добавляет выбранную орбиту
      parameters:
      - description: Название орбиты
        format: ascii
        in: path
        name: orbit_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Орбита добавлена успешно
          schema:
            type: string
        "400":
          description: Некорректные данные заявки или орбиты
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Добавление орбиты в заявку на трансфер
      tags:
      - Орбиты
  /orbits/{orbit_name}/edit:
    put:
      consumes:
      - application/json
      description: Обновляет данные об орбите, основываясь на полях из JSON
      parameters:
      - description: Орбита
        in: body
        name: orbit
        schema:
          $ref: '#/definitions/ds.Orbit'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
      summary: Изменение орбиты
      tags:
      - Орбиты
  /orbits/{orbit_name}/status:
    delete:
      consumes:
      - application/json
      description: Изменяет статус указанной орбиты
      parameters:
      - description: Имя орбиты для изменения статуса
        in: path
        name: orbit_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Статус орбиты успешно изменен
          schema:
            type: string
      summary: Изменение статуса орбиты
      tags:
      - Орбиты
  /orbits/{req_id}:
    get:
      consumes:
      - application/json
      description: Возвращает порядок перелетов по орбитам для конкретной заявки
      parameters:
      - description: ID заявки
        in: path
        name: req_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ с порядком перелетов по орбитам
          schema:
            $ref: '#/definitions/ds.OrbitOrder'
      summary: Получение порядка перелетов по орибтам
      tags:
      - Трансферы
  /orbits/image:
    post:
      consumes:
      - multipart/form-data
      description: Загружает изображение для указанной орбиты и сохраняет его в Minio
      parameters:
      - description: Имя орбиты, для которой загружается изображение
        in: formData
        name: orbitName
        required: true
        type: string
      - description: Изображение для загрузки
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Успешно загружено изображение в Minio
          schema:
            type: string
      summary: Загрузка изображения для орбиты
      tags:
      - Орбиты
  /orbits/new_orbit:
    post:
      consumes:
      - application/json
      description: Добавляет орбиту с полями, указанныим в JSON
      parameters:
      - description: Данные новой орбиты
        in: body
        name: orbit
        required: true
        schema:
          $ref: '#/definitions/ds.Orbit'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
      summary: Добавление новой орбиты
      tags:
      - Орбиты
  /orbits/transfer/{req_id}:
    get:
      consumes:
      - application/json
      description: Возвращает список орбит, связанных с указанной заявкой
      parameters:
      - description: ID заявки
        in: path
        name: req_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список орбит, связанных с заявкой
          schema:
            items:
              $ref: '#/definitions/ds.Orbit'
            type: array
        "400":
          description: Ошибка в ID заявки
          schema:
            type: string
        "403":
          description: Доступ запрещен, отсутствует авторизация
          schema:
            type: string
        "404":
          description: Заявка не найдена
          schema:
            type: string
        "500":
          description: Ошибка при получении орбит из заявки
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Получение орбит из заявки
      tags:
      - Трансферы
  /register:
    post:
      consumes:
      - application/json
      description: Добавляет в БД нового пользователя
      parameters:
      - description: Данные для регистрации
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/app.registerReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.registerResp'
      summary: Зарегистрировать нового пользователя
      tags:
      - Аутентификация
  /requests/status:
    put:
      consumes:
      - application/json
      description: Изменяет статус указанной заявки в зависимости от роли пользователя
      parameters:
      - description: Тело запроса для изменения статуса заявки
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/ds.ChangeTransferStatusRequestBody'
      produces:
      - text/plain
      responses:
        "201":
          description: Статус заявки успешно изменен
          schema:
            type: string
        "400":
          description: Неверный запрос
          schema:
            type: string
        "403":
          description: Запрещено изменение статуса
          schema:
            type: string
        "404":
          description: Заявка не найдена
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Изменение статуса заявки
      tags:
      - Заявки на трансфер
  /transfer/result:
    post:
      consumes:
      - application/json
      description: Получает ответ от выделенного сервиса и вносит изменения в БД
      parameters:
      - description: Тело запроса для обновления результата маневра
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/ds.AsyncBody'
      produces:
      - application/json
      responses:
        "200":
          description: Статус успешно обновлен
          schema:
            type: string
      summary: Обновление поля успеха маневра в заявке
      tags:
      - Асинхронный сервис
  /transfer_requests:
    get:
      description: Получает все заявки на трансфер
      parameters:
      - description: Дата начала периода фильтрации (YYYY-MM-DD)
        in: query
        name: date_start
        type: string
      - description: Дата окончания периода фильтрации (YYYY-MM-DD)
        in: query
        name: date_fin
        type: string
      - description: Статус заявки на трансфер
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список заявок на трансфер
          schema:
            items:
              type: string
            type: array
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Получение всех заявок на трансфер
      tags:
      - Заявки на трансфер
  /transfer_requests/{req_id}:
    get:
      description: Получает подробную информаицю о заявке на трансфер
      parameters:
      - description: ID заявки
        in: path
        name: req_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "301":
          description: Moved Permanently
          schema:
            type: string
      summary: Получение детализированной заявки на трансфер
      tags:
      - Заявки на трансфер
  /transfers/delete:
    delete:
      consumes:
      - application/json
      description: Удаляет перелет между указанной заявкой и орбитой по их идентификаторам
      parameters:
      - description: Тело запроса для удаления связи
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/ds.DelTransferToOrbitBody'
      produces:
      - text/plain
      responses:
        "201":
          description: Перелет успешно удален
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "403":
          description: Доступ запрещен, отсутствует авторизация
          schema:
            type: string
        "404":
          description: Орбита не найдена
          schema:
            type: string
        "500":
          description: Ошибка при удалении связи
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Удаление перелета по двум ID
      tags:
      - Трансферы
  /transfers/update-order:
    put:
      consumes:
      - application/json
      description: Обновляет порядок посещения орбит в указанной заявке на основе
        предоставленных данных
      parameters:
      - description: Тело запроса для обновления порядка
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/ds.UpdateTransferOrdersBody'
      produces:
      - text/plain
      responses:
        "201":
          description: Порядок посещения успешно изменен
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "403":
          description: Доступ запрещен, отсутствует авторизация
          schema:
            type: string
        "404":
          description: Заявка не найдена
          schema:
            type: string
        "500":
          description: Ошибка при обновлении порядка посещения
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Обновление порядка посещения орбит в заявке
      tags:
      - Трансферы
schemes:
- http
swagger: "2.0"
